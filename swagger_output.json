{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token",
      "description": "User JWT token"
    }
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Bathing Waters"
        ],
        "summary": "Checks the external API health status",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/bathing-waters": {
      "get": {
        "tags": [
          "Bathing Waters"
        ],
        "summary": "Retrieves all active bathing sites",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "bounds",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/bathing-waters/{lid}/profile": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/bathing-waters/{id}/profile": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/bathing-waters/{id}/results": {
      "get": {
        "tags": [
          "Bathing Waters"
        ],
        "summary": "Retrieves the profile of a bathing site",
        "description": "",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/forecasts": {
      "get": {
        "tags": [
          "Bathing Waters"
        ],
        "summary": "Retrieves water temperature forecasts",
        "description": "",
        "parameters": [
          {
            "name": "bathingWaterId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "municId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "municName",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to create an account you canq add firstname and lastname optionally",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "username, email and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Hugo"
                },
                "email": {
                  "type": "string",
                  "example": "kalbad@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password1234!"
                }
              },
              "required": [
                "username",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to login",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "email and password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kalbad@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password1234!"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/checkAuth": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to check if user is authenticated and retrieve data",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to logout",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/changeInfo": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to edit your account",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "you can change pseudo, email, password, firstname, lastname",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "kalbad@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "Password1234!"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Endpoint to delete your account",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/manage/user": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint to get all users informations",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/manage/user/{uid}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint to get all reviews from a user and the user infos",
        "description": "",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint to change user status (ban/unban), (admin/user)",
        "description": "",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "is_active (true/false), role (admin/user)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_active": {
                  "type": "boolean",
                  "example": true
                },
                "role": {
                  "type": "string",
                  "example": "admin"
                }
              },
              "required": [
                "is_active",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Endpoint to delete a user by admin",
        "description": "",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/locations/{lid}/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Endpoint to get all reviews from the location ID",
        "description": "",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Endpoint to add a review to a location ID",
        "description": "",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "rating and review_text",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "number",
                  "example": 4
                },
                "review_text": {
                  "type": "string",
                  "example": "Smell wierd but water is warm !"
                }
              },
              "required": [
                "rating",
                "review_text"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/review/{rid}": {
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Endpoint to modify a review",
        "description": "",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "you can change rating and review_text",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "number",
                  "example": 2
                },
                "review_text": {
                  "type": "string",
                  "example": "too bad bro !"
                }
              },
              "required": [
                "rating",
                "review_text"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Endpoint to delete a review",
        "description": "",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/manage/review/{rid}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin endpoint to get a review by its ID",
        "description": "",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin endpoint to modify a review by its ID",
        "description": "",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "you can change rating and review_text",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "number",
                  "example": 3
                },
                "review_text": {
                  "type": "string",
                  "example": "It is much better right now."
                }
              },
              "required": [
                "rating",
                "review_text"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin endpoint to delete a review by its ID",
        "description": "",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/location": {
      "get": {
        "tags": [
          "Visited Sites"
        ],
        "summary": "Endpoint to get all visited sites of a user",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/location/{lid}": {
      "put": {
        "tags": [
          "Visited Sites"
        ],
        "summary": "Endpoint to add a visited site to a user",
        "description": "",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Visited Sites"
        ],
        "summary": "Endpoint to remove a visited site from a user",
        "description": "",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}